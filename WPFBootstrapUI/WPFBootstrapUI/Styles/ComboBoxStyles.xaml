<ResourceDictionary
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:local="clr-namespace:WPFBootstrapUI.Styles">

    <!--#region ComboBoxItemStyle-->
    <ControlTemplate x:Key="ComboBoxItemTemplate" TargetType="{x:Type ComboBoxItem}">
        <Grid>
            <Border
                x:Name="Bd"
                Padding="{TemplateBinding Padding}"
                Background="{TemplateBinding Background}"
                BorderBrush="{TemplateBinding BorderBrush}"
                BorderThickness="{TemplateBinding BorderThickness}"
                SnapsToDevicePixels="true">
                <ContentPresenter
                    HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                    VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                    SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
            </Border>
        </Grid>

        <ControlTemplate.Triggers>
            <Trigger Property="IsEnabled" Value="False">
                <Setter TargetName="Bd" Property="TextElement.Foreground" Value="{StaticResource DarkHoveredSolidColorBrush}" />
            </Trigger>

            <Trigger Property="IsSelected" Value="True">
                <Setter TargetName="Bd" Property="Background" Value="{StaticResource AlertSecondarySolidColorBrush}" />
                <Setter TargetName="Bd" Property="BorderBrush" Value="Black" />
            </Trigger>

            <Trigger Property="IsMouseOver" Value="True">
                <Setter TargetName="Bd" Property="Background" Value="{StaticResource AlertSecondarySolidColorBrush}" />
                <Setter TargetName="Bd" Property="BorderBrush" Value="Black" />
            </Trigger>

            <MultiTrigger>
                <MultiTrigger.Conditions>
                    <Condition Property="IsSelected" Value="False" />
                    <Condition Property="IsMouseOver" Value="False" />
                    <Condition Property="IsKeyboardFocused" Value="True" />
                </MultiTrigger.Conditions>
                <Setter TargetName="Bd" Property="Background" Value="{StaticResource AlertSecondarySolidColorBrush}" />
                <Setter TargetName="Bd" Property="BorderBrush" Value="Black" />
            </MultiTrigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>

    <Style x:Key="ComboBoxItemStyle" TargetType="{x:Type ComboBoxItem}">
        <Setter Property="SnapsToDevicePixels" Value="True" />
        <Setter Property="Padding" Value="4,1" />
        <Setter Property="FontSize" Value="{StaticResource Font.Size.Control}" />
        <Setter Property="Foreground" Value="{StaticResource DarkHoveredSolidColorBrush}" />
        <Setter Property="FontFamily" Value="{StaticResource SegoeUI}" />
        <Setter Property="HorizontalContentAlignment" Value="{Binding HorizontalContentAlignment, RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}}" />
        <Setter Property="VerticalContentAlignment" Value="{Binding VerticalContentAlignment, RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}}" />
        <Setter Property="Background" Value="Transparent" />
        <Setter Property="BorderBrush" Value="Transparent" />
        <Setter Property="BorderThickness" Value="2" />
        <Setter Property="Template" Value="{StaticResource ComboBoxItemTemplate}" />
    </Style>
    <!--#endregion-->

    <!--#region Toggle Button-->
    <ControlTemplate x:Key="BootstrapUIComboBoxToggleButtonTemplate" TargetType="{x:Type ToggleButton}">
        <Grid SnapsToDevicePixels="True">
            <Border
                x:Name="OutterBorder"
                Background="{StaticResource WhiteSolidColorBrush}"
                BorderBrush="{StaticResource AlertPrimarySolidColorBrush}"
                BorderThickness="4"
                CornerRadius="6"
                SnapsToDevicePixels="true">
                <Border
                    x:Name="InnerBorder"
                    Background="{StaticResource WhiteSolidColorBrush}"
                    BorderBrush="LightGray"
                    BorderThickness="1"
                    CornerRadius="4"
                    SnapsToDevicePixels="True"
                    Visibility="Visible">
                    <Canvas
                        Width="15"
                        Height="15"
                        Margin="0,-8,14,0"
                        HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}">
                        <Path Data="M7.41,8.58L12,13.17L16.59,8.58L18,10L12,16L6,10L7.41,8.58Z" Fill="Black" />
                    </Canvas>
                </Border>
            </Border>
        </Grid>

        <ControlTemplate.Triggers>
            <Trigger Property="IsChecked" Value="True">
                <Setter TargetName="OutterBorder" Property="Border.BorderBrush" Value="{StaticResource AlertPrimarySolidColorBrush}" />
                <Setter TargetName="InnerBorder" Property="Border.BorderBrush" Value="{StaticResource PrimarySolidColorBrush}" />
                <Setter TargetName="InnerBorder" Property="Opacity" Value="0.5" />
            </Trigger>

            <Trigger Property="IsChecked" Value="False">
                <Setter TargetName="OutterBorder" Property="Border.BorderBrush" Value="Transparent" />
                <Setter TargetName="InnerBorder" Property="Border.BorderBrush" Value="LightGray" />
                <Setter TargetName="InnerBorder" Property="Opacity" Value="1" />
            </Trigger>

        </ControlTemplate.Triggers>
    </ControlTemplate>

    <Style x:Key="BootstrapUIComboBoxToggleButton" TargetType="{x:Type ToggleButton}">
        <Setter Property="IsTabStop" Value="false" />
        <Setter Property="Focusable" Value="false" />
        <Setter Property="ClickMode" Value="Press" />
        <Setter Property="BorderThickness" Value="1" />
        <Setter Property="HorizontalContentAlignment" Value="Right" />
        <Setter Property="Template" Value="{StaticResource BootstrapUIComboBoxToggleButtonTemplate}" />
    </Style>
    <!--#endregion-->

    <!--#region ComboBox Editable-->
    <ControlTemplate x:Key="ComboBoxEditableTemplate" TargetType="{x:Type ComboBox}">
        <Grid x:Name="templateRoot" SnapsToDevicePixels="true">
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="*" />
                <ColumnDefinition Width="0" MinWidth="{DynamicResource {x:Static SystemParameters.VerticalScrollBarWidthKey}}" />
            </Grid.ColumnDefinitions>

            <Popup
                x:Name="PART_Popup"
                Grid.ColumnSpan="2"
                AllowsTransparency="true"
                IsOpen="{Binding IsDropDownOpen, RelativeSource={RelativeSource TemplatedParent}}"
                Placement="Bottom"
                PopupAnimation="Slide">
                <Border
                    x:Name="dropDownBorder"
                    Background="{StaticResource WhiteSolidColorBrush}"
                    BorderBrush="{StaticResource AlertPrimarySolidColorBrush}"
                    BorderThickness="1.4">
                    <ScrollViewer x:Name="DropDownScrollViewer">
                        <Grid x:Name="grid" RenderOptions.ClearTypeHint="Enabled">
                            <Canvas
                                x:Name="canvas"
                                Width="0"
                                Height="0"
                                HorizontalAlignment="Left"
                                VerticalAlignment="Top">
                                <Rectangle
                                    x:Name="opaqueRect"
                                    Width="{Binding ActualWidth, ElementName=dropDownBorder}"
                                    Height="{Binding ActualHeight, ElementName=dropDownBorder}"
                                    Fill="{Binding Background, ElementName=dropDownBorder}" />
                            </Canvas>
                            <ItemsPresenter
                                x:Name="ItemsPresenter"
                                KeyboardNavigation.DirectionalNavigation="Contained"
                                SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
                        </Grid>
                    </ScrollViewer>
                </Border>
            </Popup>


            <ToggleButton
                x:Name="toggleButton"
                Grid.ColumnSpan="2"
                Background="{TemplateBinding Background}"
                BorderBrush="{TemplateBinding BorderBrush}"
                BorderThickness="{TemplateBinding BorderThickness}"
                IsChecked="{Binding IsDropDownOpen, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}"
                Style="{StaticResource BootstrapUIComboBoxToggleButton}" />

            <Border
                x:Name="border"
                Margin="{TemplateBinding BorderThickness}"
                Background="{TemplateBinding Background}">
                <TextBox
                    x:Name="PART_EditableTextBox"
                    Margin="{TemplateBinding Padding}"
                    HorizontalContentAlignment="{TemplateBinding HorizontalContentAlignment}"
                    VerticalContentAlignment="{TemplateBinding VerticalContentAlignment}"
                    IsReadOnly="{Binding IsReadOnly, RelativeSource={RelativeSource TemplatedParent}}"
                    Style="{StaticResource ComboBoxEditableTextBox}" />
            </Border>
        </Grid>
        <ControlTemplate.Triggers>
            <Trigger Property="IsEnabled" Value="False">
                <Setter TargetName="border" Property="Opacity" Value="0.56" />
            </Trigger>
            <Trigger Property="IsKeyboardFocusWithin" Value="true">
                <Setter Property="Foreground" Value="Black" />
                <Setter TargetName="dropDownBorder" Property="Border.BorderBrush" Value="{StaticResource PrimarySolidColorBrush}" />
                <Setter TargetName="dropDownBorder" Property="Opacity" Value="0.5" />
            </Trigger>
            <Trigger Property="HasItems" Value="False">
                <Setter TargetName="dropDownBorder" Property="Height" Value="95" />
            </Trigger>
            <MultiTrigger>
                <MultiTrigger.Conditions>
                    <Condition Property="IsGrouping" Value="True" />
                    <Condition Property="VirtualizingPanel.IsVirtualizingWhenGrouping" Value="False" />
                </MultiTrigger.Conditions>
                <Setter Property="ScrollViewer.CanContentScroll" Value="False" />
            </MultiTrigger>
            <Trigger SourceName="DropDownScrollViewer" Property="ScrollViewer.CanContentScroll" Value="False">
                <Setter TargetName="opaqueRect" Property="Canvas.Top" Value="{Binding VerticalOffset, ElementName=DropDownScrollViewer}" />
                <Setter TargetName="opaqueRect" Property="Canvas.Left" Value="{Binding HorizontalOffset, ElementName=DropDownScrollViewer}" />
            </Trigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>

    <Style x:Key="ComboBoxEditableTextBox" TargetType="{x:Type TextBox}">
        <Setter Property="OverridesDefaultStyle" Value="true" />
        <Setter Property="AllowDrop" Value="true" />
        <Setter Property="MinWidth" Value="0" />
        <Setter Property="MinHeight" Value="0" />
        <Setter Property="FontSize" Value="{StaticResource Font.Size.Control}" />
        <Setter Property="FocusVisualStyle" Value="{x:Null}" />
        <Setter Property="ScrollViewer.PanningMode" Value="VerticalFirst" />
        <Setter Property="Stylus.IsFlicksEnabled" Value="False" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type TextBox}">
                    <ScrollViewer
                        x:Name="PART_ContentHost"
                        Background="Transparent"
                        Focusable="false"
                        HorizontalScrollBarVisibility="Hidden"
                        VerticalScrollBarVisibility="Hidden" />
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <!--#endregion-->

    <!--#region ComboBox-->
    <ControlTemplate x:Key="ComboBoxTemplate" TargetType="{x:Type ComboBox}">
        <Grid x:Name="templateRoot" SnapsToDevicePixels="true">
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="*" />
                <ColumnDefinition Width="Auto" MinWidth="20" />
            </Grid.ColumnDefinitions>
            <Popup
                x:Name="PART_Popup"
                Grid.ColumnSpan="2"
                Width="{Binding Path=ActualWidth, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=Grid}}"
                Margin="1"
                AllowsTransparency="True"
                IsOpen="{Binding IsDropDownOpen, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}"
                Placement="Bottom"
                PopupAnimation="Slide">
                <Border
                    x:Name="dropDownBorder"
                    Background="{StaticResource WhiteSolidColorBrush}"
                    BorderBrush="{StaticResource LightHoveredSolidColorBrush}"
                    BorderThickness="1.4">
                    <ScrollViewer x:Name="DropDownScrollViewer">
                        <Grid x:Name="grid" RenderOptions.ClearTypeHint="Enabled">
                            <Canvas
                                x:Name="canvas"
                                Width="0"
                                Height="0"
                                HorizontalAlignment="Left"
                                VerticalAlignment="Top">
                                <Rectangle
                                    x:Name="opaqueRect"
                                    Width="{Binding ActualWidth, ElementName=dropDownBorder}"
                                    Height="{Binding ActualHeight, ElementName=dropDownBorder}"
                                    Fill="{Binding Background, ElementName=dropDownBorder}" />
                            </Canvas>
                            <ItemsPresenter
                                x:Name="ItemsPresenter"
                                KeyboardNavigation.DirectionalNavigation="Contained"
                                SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
                        </Grid>
                    </ScrollViewer>
                </Border>
            </Popup>

            <ToggleButton
                x:Name="toggleButton"
                Grid.ColumnSpan="2"
                Margin="0"
                HorizontalContentAlignment="Right"
                IsChecked="{Binding IsDropDownOpen, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}"
                Style="{StaticResource BootstrapUIComboBoxToggleButton}" />

            <ContentPresenter
                x:Name="contentPresenter"
                Margin="{TemplateBinding Padding}"
                HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                Content="{TemplateBinding SelectionBoxItem}"
                ContentStringFormat="{TemplateBinding SelectionBoxItemStringFormat}"
                ContentTemplate="{TemplateBinding SelectionBoxItemTemplate}"
                ContentTemplateSelector="{TemplateBinding ItemTemplateSelector}"
                IsHitTestVisible="false"
                SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
        </Grid>
        <ControlTemplate.Triggers>
            <Trigger Property="HasItems" Value="false">
                <Setter TargetName="dropDownBorder" Property="Height" Value="95" />
            </Trigger>
            <MultiTrigger>
                <MultiTrigger.Conditions>
                    <Condition Property="IsGrouping" Value="true" />
                    <Condition Property="VirtualizingPanel.IsVirtualizingWhenGrouping" Value="false" />
                </MultiTrigger.Conditions>
                <Setter Property="ScrollViewer.CanContentScroll" Value="false" />
            </MultiTrigger>
            <Trigger SourceName="DropDownScrollViewer" Property="ScrollViewer.CanContentScroll" Value="false">
                <Setter TargetName="opaqueRect" Property="Canvas.Top" Value="{Binding VerticalOffset, ElementName=DropDownScrollViewer}" />
                <Setter TargetName="opaqueRect" Property="Canvas.Left" Value="{Binding HorizontalOffset, ElementName=DropDownScrollViewer}" />
            </Trigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>

    <Style x:Key="ComboBoxStyle" TargetType="{x:Type ComboBox}">
        <Setter Property="FontSize" Value="{StaticResource Font.Size.Control}" />
        <Setter Property="Background" Value="{StaticResource WhiteSolidColorBrush}" />
        <Setter Property="BorderBrush" Value="LightGray" />
        <Setter Property="Foreground" Value="{StaticResource DarkHoveredSolidColorBrush}" />
        <Setter Property="BorderThickness" Value="1" />
        <Setter Property="ScrollViewer.HorizontalScrollBarVisibility" Value="Auto" />
        <Setter Property="ScrollViewer.VerticalScrollBarVisibility" Value="Auto" />
        <Setter Property="Padding" Value="14" />
        <Setter Property="ScrollViewer.CanContentScroll" Value="true" />
        <Setter Property="ScrollViewer.PanningMode" Value="Both" />
        <Setter Property="Stylus.IsFlicksEnabled" Value="False" />
        <Setter Property="Template" Value="{StaticResource ComboBoxTemplate}" />
        <Style.Triggers>
            <Trigger Property="IsEditable" Value="true">
                <Setter Property="IsTabStop" Value="false" />
                <Setter Property="Padding" Value="2" />
                <Setter Property="Template" Value="{StaticResource ComboBoxEditableTemplate}" />
            </Trigger>
        </Style.Triggers>
    </Style>

    <!--#endregion-->

    <Style BasedOn="{StaticResource ComboBoxItemStyle}" TargetType="{x:Type ComboBoxItem}" />
    <Style BasedOn="{StaticResource ComboBoxStyle}" TargetType="{x:Type ComboBox}" />

</ResourceDictionary>
