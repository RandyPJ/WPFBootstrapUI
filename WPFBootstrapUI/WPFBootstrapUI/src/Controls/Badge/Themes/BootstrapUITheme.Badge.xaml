<ResourceDictionary
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:Controls="clr-namespace:WPFBootstrapUI.src.Controls"
    xmlns:Converters="clr-namespace:WPFBootstrapUI.src.Converters"
    xmlns:Helpers="clr-namespace:WPFBootstrapUI.src">

    <Converters:BooleanToVisibilityConverter x:Key="BooleanToVisibilityConverter" />

    <Style x:Key="badge-base" TargetType="{x:Type Controls:Badge}">
        <Setter Property="Cursor" Value="Hand" />
        <Setter Property="FontSize" Value="16" />
        <Setter Property="Height" Value="Auto" />
        <Setter Property="Width" Value="Auto" />
        <Setter Property="MaxHeight" Value="Infinity" />
        <Setter Property="MaxWidth" Value="Infinity" />
        <Setter Property="MinWidth" Value="0" />
        <Setter Property="SnapsToDevicePixels" Value="True" />
        <Setter Property="MinHeight" Value="0" />
        <Setter Property="FontFamily" Value="{StaticResource SegoeUI}" />
        <Setter Property="Foreground" Value="{StaticResource WhiteSolidColorBrush}" />
    </Style>

    <Style
        x:Key="badge-notification"
        BasedOn="{StaticResource badge-base}"
        TargetType="{x:Type Controls:Badge}">
        <Setter Property="Background" Value="{StaticResource PrimarySolidColorBrush}" />
        <Setter Property="Padding" Value="10,8" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Controls:Badge}">
                    <Border
                        x:Name="OutterBorder"
                        Background="{TemplateBinding Background}"
                        BorderBrush="{StaticResource AlertPrimarySolidColorBrush}"
                        BorderThickness="4"
                        CornerRadius="5">

                        <Grid UseLayoutRounding="True">
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="*" />
                                <ColumnDefinition Width="Auto" />
                            </Grid.ColumnDefinitions>

                            <Border
                                x:Name="InnerBorder"
                                Background="{TemplateBinding Background}"
                                BorderBrush="{TemplateBinding BorderBrush}"
                                BorderThickness="1"
                                CornerRadius="5" />

                            <Label
                                x:Name="PART_Content"
                                Grid.Column="0"
                                Padding="{TemplateBinding Padding}"
                                HorizontalAlignment="Stretch"
                                Content="{TemplateBinding Content}"
                                Foreground="{TemplateBinding Foreground}" />

                            <Label
                                x:Name="PART_NotifyCount"
                                Grid.Column="1"
                                Width="20"
                                Height="20"
                                Margin="0,0,10,0"
                                HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                VerticalAlignment="{TemplateBinding VerticalAlignment}"
                                Background="{StaticResource WhiteSolidColorBrush}"
                                Content="{TemplateBinding NotificationNumber}"
                                FontSize="12"
                                FontWeight="Bold"
                                Foreground="{StaticResource DarkSolidColorBrush}"
                                Visibility="{Binding RelativeSource={x:Static RelativeSource.TemplatedParent}, Path=IsNotificationBadge, Converter={StaticResource BooleanToVisibilityConverter}}">
                                <Label.Style>
                                    <Style TargetType="{x:Type Label}">
                                        <Setter Property="Template">
                                            <Setter.Value>
                                                <ControlTemplate TargetType="{x:Type Label}">
                                                    <Grid>
                                                        <Border Background="{TemplateBinding Background}" CornerRadius="5" />
                                                        <ContentPresenter
                                                            Margin="2"
                                                            HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                                            VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                                            Content="{TemplateBinding Content}" />
                                                    </Grid>
                                                </ControlTemplate>
                                            </Setter.Value>
                                        </Setter>
                                    </Style>
                                </Label.Style>
                            </Label>
                        </Grid>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter TargetName="InnerBorder" Property="Border.Background" Value="{StaticResource PrimaryHoveredSolidColorBrush}" />
                        </Trigger>

                        <Trigger Property="IsFocused" Value="True">
                            <Setter TargetName="OutterBorder" Property="Border.BorderBrush" Value="{StaticResource AlertPrimarySolidColorBrush}" />
                            <Setter TargetName="InnerBorder" Property="Border.Background" Value="{StaticResource PrimaryHoveredSolidColorBrush}" />
                        </Trigger>

                        <Trigger Property="IsFocused" Value="False">
                            <Setter TargetName="OutterBorder" Property="Border.BorderBrush" Value="Transparent" />
                            <Setter TargetName="InnerBorder" Property="Border.Background" Value="{StaticResource PrimarySolidColorBrush}" />
                        </Trigger>

                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsFocused" Value="True" />
                                <Condition Property="IsMouseOver" Value="False" />
                            </MultiTrigger.Conditions>
                            <MultiTrigger.Setters>
                                <Setter TargetName="OutterBorder" Property="Border.BorderBrush" Value="{StaticResource AlertPrimarySolidColorBrush}" />
                                <Setter TargetName="InnerBorder" Property="Border.Background" Value="{StaticResource PrimaryHoveredSolidColorBrush}" />
                            </MultiTrigger.Setters>
                        </MultiTrigger>

                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsFocused" Value="False" />
                                <Condition Property="IsMouseOver" Value="True" />
                            </MultiTrigger.Conditions>
                            <MultiTrigger.Setters>
                                <Setter TargetName="OutterBorder" Property="Border.BorderBrush" Value="Transparent" />
                                <Setter TargetName="InnerBorder" Property="Border.Background" Value="{StaticResource PrimaryHoveredSolidColorBrush}" />
                            </MultiTrigger.Setters>
                        </MultiTrigger>

                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

</ResourceDictionary>