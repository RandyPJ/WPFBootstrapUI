<ResourceDictionary
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:Assist="clr-namespace:WPFBootstrapUI.src"
    xmlns:iconPack="http://metro.mahapps.com/winfx/xaml/iconpacks"
    xmlns:local="clr-namespace:WPFBootstrapUI.src.Controls.TextBox.Themes">


    <Style x:Key="BootstrapTextbox" TargetType="{x:Type TextBox}">
        <Setter Property="FontSize" Value="16" />
        <Setter Property="Padding" Value="10" />
        <Setter Property="Cursor" Value="IBeam" />
        <Setter Property="Height" Value="Auto" />
        <Setter Property="SnapsToDevicePixels" Value="True" />
        <Setter Property="UseLayoutRounding" Value="True" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type TextBox}">
                    <Border
                        x:Name="OutterBorder"
                        BorderBrush="{StaticResource AlertPrimarySolidColorBrush}"
                        BorderThickness="4"
                        CornerRadius="5"
                        SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"
                        UseLayoutRounding="{TemplateBinding UseLayoutRounding}">
                        <Grid SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}">
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="*" />
                                <ColumnDefinition Width="Auto" />
                            </Grid.ColumnDefinitions>
                            <Border
                                x:Name="InnerBorder"
                                Height="{TemplateBinding Height}"
                                BorderBrush="LightGray"
                                BorderThickness="1"
                                CornerRadius="{Binding ElementName=OutterBorder, Path=CornerRadius}"
                                SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"
                                UseLayoutRounding="{TemplateBinding UseLayoutRounding}" />

                            <ScrollViewer x:Name="PART_ContentHost" />

                            <TextBlock
                                x:Name="PART_Placeholder"
                                Margin="12,0,0,0"
                                VerticalAlignment="Center"
                                Foreground="SlateGray"
                                Text="{TemplateBinding Assist:BootstrapTextBoxAssist.PlaceHolder}"
                                Visibility="Collapsed" />

                            <TextBlock
                                x:Name="PART_PasswordChar"
                                Margin="{Binding ElementName=PART_Placeholder, Path=Margin}"
                                VerticalAlignment="Center"
                                Text="{TemplateBinding Assist:BootstrapTextBoxAssist.PasswordChar}"
                                Visibility="Collapsed" />

                            <CheckBox
                                x:Name="PART_PasswordVisible"
                                Grid.Column="1"
                                Width="Auto"
                                Height="Auto"
                                Margin="0,0,20,0"
                                HorizontalContentAlignment="Center"
                                VerticalContentAlignment="Center"
                                Background="Transparent"
                                BorderBrush="{x:Null}"
                                Content="{iconPack:FontAwesome Kind=EyeRegular}"
                                Cursor="Hand"
                                Visibility="Collapsed" />

                        </Grid>
                    </Border>
                    <ControlTemplate.Triggers>

                        <Trigger Property="IsFocused" Value="True">
                            <Trigger.EnterActions>
                                <BeginStoryboard>
                                    <Storyboard Storyboard.TargetName="OutterBorder" Storyboard.TargetProperty="(Border.BorderBrush).(SolidColorBrush.Color)">
                                        <ColorAnimation
                                            From="Transparent"
                                            To="{StaticResource AlertPrimaryColor}"
                                            Duration="0:0:0.2" />
                                    </Storyboard>
                                </BeginStoryboard>
                            </Trigger.EnterActions>

                            <Trigger.ExitActions>
                                <BeginStoryboard>
                                    <Storyboard Storyboard.TargetName="OutterBorder" Storyboard.TargetProperty="(Border.BorderBrush).(SolidColorBrush.Color)">
                                        <ColorAnimation
                                            From="{StaticResource AlertPrimaryColor}"
                                            To="Transparent"
                                            Duration="0:0:0.2" />
                                    </Storyboard>
                                </BeginStoryboard>
                            </Trigger.ExitActions>
                        </Trigger>

                        <Trigger Property="IsFocused" Value="False">
                            <Trigger.EnterActions>
                                <BeginStoryboard>
                                    <Storyboard Storyboard.TargetName="OutterBorder" Storyboard.TargetProperty="(Border.BorderBrush).(SolidColorBrush.Color)">
                                        <ColorAnimation
                                            From="{StaticResource AlertPrimaryColor}"
                                            To="Transparent"
                                            Duration="0:0:0.2" />
                                    </Storyboard>
                                </BeginStoryboard>
                            </Trigger.EnterActions>

                            <Trigger.ExitActions>
                                <BeginStoryboard>
                                    <Storyboard Storyboard.TargetName="OutterBorder" Storyboard.TargetProperty="(Border.BorderBrush).(SolidColorBrush.Color)">
                                        <ColorAnimation
                                            From="Transparent"
                                            To="{StaticResource AlertPrimaryColor}"
                                            Duration="0:0:0.2" />
                                    </Storyboard>
                                </BeginStoryboard>
                            </Trigger.ExitActions>
                        </Trigger>

                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="Text" Value="" />
                                <Condition Property="IsFocused" Value="True" />
                            </MultiTrigger.Conditions>
                            <MultiTrigger.Setters>
                                <Setter TargetName="PART_Placeholder" Property="Visibility" Value="Visible" />
                                <Setter TargetName="PART_PasswordChar" Property="Visibility" Value="Collapsed" />
                                <Setter TargetName="PART_PasswordVisible" Property="Visibility" Value="Collapsed" />
                                <Setter Property="Assist:BootstrapTextBoxAssist.HasText" Value="False" />
                                <Setter TargetName="PART_PasswordVisible" Property="IsChecked" Value="False" />
                            </MultiTrigger.Setters>
                        </MultiTrigger>

                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="Text" Value="" />
                                <Condition Property="IsFocused" Value="False" />
                            </MultiTrigger.Conditions>
                            <MultiTrigger.Setters>
                                <Setter TargetName="PART_Placeholder" Property="Visibility" Value="Visible" />
                                <Setter TargetName="PART_PasswordChar" Property="Visibility" Value="Collapsed" />
                                <Setter TargetName="PART_PasswordVisible" Property="Visibility" Value="Collapsed" />
                                <Setter Property="Assist:BootstrapTextBoxAssist.HasText" Value="False" />
                                <Setter TargetName="PART_PasswordVisible" Property="IsChecked" Value="False" />
                            </MultiTrigger.Setters>
                        </MultiTrigger>

                        <Trigger Property="Assist:BootstrapTextBoxAssist.HasText" Value="True">
                            <Setter TargetName="PART_PasswordVisible" Property="Visibility" Value="Visible" />
                            <Setter TargetName="InnerBorder" Property="BorderThickness" Value="1,1,0,1" />
                            <Setter TargetName="InnerBorder" Property="CornerRadius" Value="1,1,0,0" />
                        </Trigger>

                        <Trigger Property="Assist:BootstrapTextBoxAssist.HasText" Value="False">
                            <Setter TargetName="PART_PasswordVisible" Property="Visibility" Value="Collapsed" />
                            <Setter TargetName="InnerBorder" Property="BorderThickness" Value="1,1,0,1" />
                            <Setter TargetName="InnerBorder" Property="CornerRadius" Value="1,1,0,0" />
                        </Trigger>

                        <Trigger SourceName="PART_PasswordVisible" Property="IsChecked" Value="False">
                            <Setter TargetName="PART_PasswordVisible" Property="Content" Value="{iconPack:FontAwesome Kind=EyeRegular}" />
                        </Trigger>

                        <Trigger SourceName="PART_PasswordVisible" Property="IsChecked" Value="True">
                            <Setter TargetName="PART_PasswordVisible" Property="Content" Value="{iconPack:FontAwesome Kind=EyeSlashRegular}" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
</ResourceDictionary>