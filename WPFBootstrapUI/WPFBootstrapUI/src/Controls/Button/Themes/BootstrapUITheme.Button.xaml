<ResourceDictionary
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:assist="clr-namespace:WPFBootstrapUI.src">


    <ControlTemplate x:Key="WindowButtonTemplate" TargetType="{x:Type Button}">
        <Grid Background="Transparent">
            <Border x:Name="MouseOverBorder"
                Background="{TemplateBinding Background}"
                Opacity="0" />
            <ContentPresenter x:Name="ContentPresenter"
                Margin="{TemplateBinding Padding}"
                HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                Content="{TemplateBinding Content}"
                ContentTemplate="{TemplateBinding ContentTemplate}" />
        </Grid>
        <ControlTemplate.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter TargetName="MouseOverBorder" Property="Opacity" Value="1" />
                <Setter TargetName="MouseOverBorder" Property="Background" Value="{StaticResource PrimaryHoveredSolidColorBrush}" />
            </Trigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>

    <Style x:Key="WindowButtonStyle" TargetType="{x:Type Button}">
        <Setter Property="Height" Value="Auto" />
        <Setter Property="Width" Value="Auto" />
        <Setter Property="Background" Value="Transparent" />
        <Setter Property="HorizontalContentAlignment" Value="Center" />
        <Setter Property="VerticalContentAlignment" Value="Center" />
        <Setter Property="Foreground" Value="{StaticResource WhiteSolidColorBrush}" />
        <Setter Property="WindowChrome.IsHitTestVisibleInChrome" Value="True" />
        <Setter Property="VerticalAlignment" Value="Center" />
        <Setter Property="Padding" Value="10,5,10,5" />
        <Setter Property="Margin" Value="20" />
        <Setter Property="IsTabStop" Value="False" />
        <Setter Property="Focusable" Value="False" />
        <Setter Property="FontSize" Value="20" />
        <Setter Property="Cursor" Value="Hand" />
        <Setter Property="FocusVisualStyle" Value="{x:Null}" />
        <Setter Property="Template" Value="{StaticResource WindowButtonTemplate}" />
    </Style>

    <Style x:Key="btn-base" TargetType="{x:Type Button}">
        <Setter Property="Cursor" Value="Hand" />
        <Setter Property="FontSize" Value="16" />
        <Setter Property="Height" Value="Auto" />
        <Setter Property="Width" Value="Auto" />
        <Setter Property="MaxHeight" Value="Infinity" />
        <Setter Property="MaxWidth" Value="Infinity" />
        <Setter Property="MinWidth" Value="0" />
        <Setter Property="SnapsToDevicePixels" Value="True" />
        <Setter Property="UseLayoutRounding" Value="True" />
        <Setter Property="MinHeight" Value="0" />
        <Setter Property="FontFamily" Value="{StaticResource SegoeUI}" />
        <Setter Property="Foreground" Value="{StaticResource WhiteSolidColorBrush}" />
    </Style>

    <Style x:Key="btn-primary" BasedOn="{StaticResource btn-base}" TargetType="{x:Type Button}">
        <Setter Property="Padding" Value="10,8" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Border x:Name="OutterBorder"
                        BorderBrush="{StaticResource AlertPrimarySolidColorBrush}"
                        BorderThickness="4"
                        CornerRadius="5"
                        UseLayoutRounding="{TemplateBinding UseLayoutRounding}">
                        <Grid
                            HorizontalAlignment="Center"
                            VerticalAlignment="Center"
                            SnapsToDevicePixels="true">
                            <Border x:Name="InnerBorder"
                                Background="{StaticResource PrimarySolidColorBrush}"
                                BorderBrush="{StaticResource PrimarySolidColorBrush}"
                                BorderThickness="1"
                                CornerRadius="5"
                                UseLayoutRounding="{TemplateBinding UseLayoutRounding}">
                                <ContentPresenter x:Name="PART_Content"
                                    Margin="{TemplateBinding Padding}"
                                    HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                    VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                    Focusable="False"
                                    RecognizesAccessKey="True"
                                    SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
                            </Border>
                        </Grid>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter TargetName="InnerBorder" Property="Border.Background" Value="{StaticResource PrimaryHoveredSolidColorBrush}" />
                        </Trigger>

                        <Trigger Property="IsPressed" Value="True">
                            <Setter TargetName="OutterBorder" Property="Border.BorderBrush" Value="{StaticResource AlertPrimarySolidColorBrush}" />
                        </Trigger>

                        <Trigger Property="IsPressed" Value="False">
                            <Setter TargetName="OutterBorder" Property="Border.BorderBrush" Value="Transparent" />
                        </Trigger>

                        <Trigger Property="IsFocused" Value="True">
                            <Setter TargetName="OutterBorder" Property="Border.BorderBrush" Value="{StaticResource AlertPrimarySolidColorBrush}" />
                            <Setter TargetName="InnerBorder" Property="Border.Background" Value="{StaticResource PrimaryHoveredSolidColorBrush}" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="btn-secondary" BasedOn="{StaticResource btn-base}" TargetType="{x:Type Button}">
        <Setter Property="Padding" Value="10,8" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Border x:Name="OutterBorder"
                        BorderBrush="{StaticResource AlertSecondarySolidColorBrush}"
                        BorderThickness="4"
                        CornerRadius="5"
                        UseLayoutRounding="{TemplateBinding UseLayoutRounding}">
                        <Grid
                            HorizontalAlignment="Center"
                            VerticalAlignment="Center"
                            SnapsToDevicePixels="true">
                            <Border x:Name="InnerBorder"
                                Background="{StaticResource SecondarySolidColorBrush}"
                                BorderBrush="{StaticResource SecondarySolidColorBrush}"
                                BorderThickness="1"
                                CornerRadius="5"
                                UseLayoutRounding="{TemplateBinding UseLayoutRounding}">
                                <ContentPresenter x:Name="PART_Content"
                                    Margin="{TemplateBinding Padding}"
                                    HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                    VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                    Focusable="False"
                                    RecognizesAccessKey="True"
                                    SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
                            </Border>
                        </Grid>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter TargetName="InnerBorder" Property="Border.Background" Value="{StaticResource SecondaryHoveredSolidColorBrush}" />
                        </Trigger>

                        <Trigger Property="IsPressed" Value="True">
                            <Setter TargetName="OutterBorder" Property="Border.BorderBrush" Value="{StaticResource AlertSecondarySolidColorBrush}" />
                        </Trigger>

                        <Trigger Property="IsPressed" Value="False">
                            <Setter TargetName="OutterBorder" Property="Border.BorderBrush" Value="Transparent" />
                        </Trigger>

                        <Trigger Property="IsFocused" Value="True">
                            <Setter TargetName="OutterBorder" Property="Border.BorderBrush" Value="{StaticResource AlertSecondarySolidColorBrush}" />
                            <Setter TargetName="InnerBorder" Property="Border.Background" Value="{StaticResource SecondaryHoveredSolidColorBrush}" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="btn-success" BasedOn="{StaticResource btn-base}" TargetType="{x:Type Button}">
        <Setter Property="Padding" Value="10,8" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Border x:Name="OutterBorder"
                        BorderBrush="{StaticResource AlertSuccessSolidColorBrush}"
                        BorderThickness="4"
                        CornerRadius="5"
                        UseLayoutRounding="{TemplateBinding UseLayoutRounding}">
                        <Grid
                            HorizontalAlignment="Center"
                            VerticalAlignment="Center"
                            SnapsToDevicePixels="true">
                            <Border x:Name="InnerBorder"
                                Background="{StaticResource SuccessSolidColorBrush}"
                                BorderBrush="{StaticResource SuccessSolidColorBrush}"
                                BorderThickness="1"
                                CornerRadius="5"
                                UseLayoutRounding="{TemplateBinding UseLayoutRounding}">
                                <ContentPresenter x:Name="PART_Content"
                                    Margin="{TemplateBinding Padding}"
                                    HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                    VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                    Focusable="False"
                                    RecognizesAccessKey="True"
                                    SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
                            </Border>
                        </Grid>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter TargetName="InnerBorder" Property="Border.Background" Value="{StaticResource SuccessHoveredSolidColorBrush}" />
                        </Trigger>

                        <Trigger Property="IsPressed" Value="True">
                            <Setter TargetName="OutterBorder" Property="Border.BorderBrush" Value="{StaticResource AlertSuccessSolidColorBrush}" />
                        </Trigger>

                        <Trigger Property="IsPressed" Value="False">
                            <Setter TargetName="OutterBorder" Property="Border.BorderBrush" Value="Transparent" />
                        </Trigger>

                        <Trigger Property="IsFocused" Value="True">
                            <Setter TargetName="OutterBorder" Property="Border.BorderBrush" Value="{StaticResource AlertSuccessSolidColorBrush}" />
                            <Setter TargetName="InnerBorder" Property="Border.Background" Value="{StaticResource SuccessHoveredSolidColorBrush}" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="btn-danger" BasedOn="{StaticResource btn-base}" TargetType="{x:Type Button}">
        <Setter Property="Padding" Value="10,8" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Border x:Name="OutterBorder"
                        BorderBrush="{StaticResource AlertDangerSolidColorBrush}"
                        BorderThickness="4"
                        CornerRadius="5"
                        UseLayoutRounding="{TemplateBinding UseLayoutRounding}">
                        <Grid
                            HorizontalAlignment="Center"
                            VerticalAlignment="Center"
                            SnapsToDevicePixels="true">
                            <Border x:Name="InnerBorder"
                                Background="{StaticResource DangerSolidColorBrush}"
                                BorderBrush="{StaticResource DangerSolidColorBrush}"
                                BorderThickness="1"
                                CornerRadius="5"
                                UseLayoutRounding="{TemplateBinding UseLayoutRounding}">
                                <ContentPresenter x:Name="PART_Content"
                                    Margin="{TemplateBinding Padding}"
                                    HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                    VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                    Focusable="False"
                                    RecognizesAccessKey="True"
                                    SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
                            </Border>
                        </Grid>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter TargetName="InnerBorder" Property="Border.Background" Value="{StaticResource DangerHoveredSolidColorBrush}" />
                        </Trigger>

                        <Trigger Property="IsPressed" Value="True">
                            <Setter TargetName="OutterBorder" Property="Border.BorderBrush" Value="{StaticResource AlertDangerSolidColorBrush}" />
                        </Trigger>

                        <Trigger Property="IsPressed" Value="False">
                            <Setter TargetName="OutterBorder" Property="Border.BorderBrush" Value="Transparent" />
                        </Trigger>

                        <Trigger Property="IsFocused" Value="True">
                            <Setter TargetName="OutterBorder" Property="Border.BorderBrush" Value="{StaticResource AlertDangerSolidColorBrush}" />
                            <Setter TargetName="InnerBorder" Property="Border.Background" Value="{StaticResource DangerHoveredSolidColorBrush}" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="btn-warning" BasedOn="{StaticResource btn-base}" TargetType="{x:Type Button}">
        <Setter Property="Padding" Value="10,8" />
        <Setter Property="Foreground" Value="{StaticResource DarkSolidColorBrush}" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Border x:Name="OutterBorder"
                        BorderBrush="{StaticResource AlertWarningSolidColorBrush}"
                        BorderThickness="4"
                        CornerRadius="5"
                        UseLayoutRounding="{TemplateBinding UseLayoutRounding}">
                        <Grid
                            HorizontalAlignment="Center"
                            VerticalAlignment="Center"
                            SnapsToDevicePixels="true">
                            <Border x:Name="InnerBorder"
                                Background="{StaticResource WarningSolidColorBrush}"
                                BorderBrush="{StaticResource WarningSolidColorBrush}"
                                BorderThickness="1"
                                CornerRadius="5"
                                UseLayoutRounding="{TemplateBinding UseLayoutRounding}">
                                <ContentPresenter x:Name="PART_Content"
                                    Margin="{TemplateBinding Padding}"
                                    HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                    VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                    Focusable="False"
                                    RecognizesAccessKey="True"
                                    SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
                            </Border>
                        </Grid>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter TargetName="InnerBorder" Property="Border.Background" Value="{StaticResource WarningHoveredSolidColorBrush}" />
                        </Trigger>

                        <Trigger Property="IsPressed" Value="True">
                            <Setter TargetName="OutterBorder" Property="Border.BorderBrush" Value="{StaticResource AlertWarningSolidColorBrush}" />
                        </Trigger>

                        <Trigger Property="IsPressed" Value="False">
                            <Setter TargetName="OutterBorder" Property="Border.BorderBrush" Value="Transparent" />
                        </Trigger>

                        <Trigger Property="IsFocused" Value="True">
                            <Setter TargetName="OutterBorder" Property="Border.BorderBrush" Value="{StaticResource AlertWarningSolidColorBrush}" />
                            <Setter TargetName="InnerBorder" Property="Border.Background" Value="{StaticResource WarningHoveredSolidColorBrush}" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="btn-info" BasedOn="{StaticResource btn-base}" TargetType="{x:Type Button}">
        <Setter Property="Padding" Value="10,8" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Border x:Name="OutterBorder"
                        BorderBrush="{StaticResource AlertInfoSolidColorBrush}"
                        BorderThickness="4"
                        CornerRadius="5"
                        UseLayoutRounding="{TemplateBinding UseLayoutRounding}">
                        <Grid
                            HorizontalAlignment="Center"
                            VerticalAlignment="Center"
                            SnapsToDevicePixels="true">
                            <Border x:Name="InnerBorder"
                                Background="{StaticResource InfoSolidColorBrush}"
                                BorderBrush="{StaticResource InfoSolidColorBrush}"
                                BorderThickness="1"
                                CornerRadius="5"
                                UseLayoutRounding="{TemplateBinding UseLayoutRounding}">
                                <ContentPresenter x:Name="PART_Content"
                                    Margin="{TemplateBinding Padding}"
                                    HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                    VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                    Focusable="False"
                                    RecognizesAccessKey="True"
                                    SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
                            </Border>
                        </Grid>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter TargetName="InnerBorder" Property="Border.Background" Value="{StaticResource InfoHoveredSolidColorBrush}" />
                        </Trigger>

                        <Trigger Property="IsPressed" Value="True">
                            <Setter TargetName="OutterBorder" Property="Border.BorderBrush" Value="{StaticResource AlertInfoSolidColorBrush}" />
                        </Trigger>

                        <Trigger Property="IsPressed" Value="False">
                            <Setter TargetName="OutterBorder" Property="Border.BorderBrush" Value="Transparent" />
                        </Trigger>

                        <Trigger Property="IsFocused" Value="True">
                            <Setter TargetName="OutterBorder" Property="Border.BorderBrush" Value="{StaticResource AlertInfoSolidColorBrush}" />
                            <Setter TargetName="InnerBorder" Property="Border.Background" Value="{StaticResource InfoHoveredSolidColorBrush}" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="btn-light" BasedOn="{StaticResource btn-base}" TargetType="{x:Type Button}">
        <Setter Property="Padding" Value="10,8" />
        <Setter Property="Foreground" Value="{StaticResource DarkSolidColorBrush}" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Border x:Name="OutterBorder"
                        BorderBrush="{StaticResource AlertLightSolidColorBrush}"
                        BorderThickness="4"
                        CornerRadius="5"
                        UseLayoutRounding="{TemplateBinding UseLayoutRounding}">
                        <Grid
                            HorizontalAlignment="Center"
                            VerticalAlignment="Center"
                            SnapsToDevicePixels="true">
                            <Border x:Name="InnerBorder"
                                Background="{StaticResource LightSolidColorBrush}"
                                BorderBrush="{StaticResource LightSolidColorBrush}"
                                BorderThickness="1"
                                CornerRadius="5"
                                UseLayoutRounding="{TemplateBinding UseLayoutRounding}">
                                <ContentPresenter x:Name="PART_Content"
                                    Margin="{TemplateBinding Padding}"
                                    HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                    VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                    Focusable="False"
                                    RecognizesAccessKey="True"
                                    SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
                            </Border>
                        </Grid>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter TargetName="InnerBorder" Property="Border.Background" Value="{StaticResource LightHoveredSolidColorBrush}" />
                        </Trigger>

                        <Trigger Property="IsPressed" Value="True">
                            <Setter TargetName="OutterBorder" Property="Border.BorderBrush" Value="{StaticResource AlertLightSolidColorBrush}" />
                        </Trigger>

                        <Trigger Property="IsPressed" Value="False">
                            <Setter TargetName="OutterBorder" Property="Border.BorderBrush" Value="Transparent" />
                        </Trigger>

                        <Trigger Property="IsFocused" Value="True">
                            <Setter TargetName="OutterBorder" Property="Border.BorderBrush" Value="{StaticResource AlertLightSolidColorBrush}" />
                            <Setter TargetName="InnerBorder" Property="Border.Background" Value="{StaticResource LightHoveredSolidColorBrush}" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="btn-dark" BasedOn="{StaticResource btn-base}" TargetType="{x:Type Button}">
        <Setter Property="Padding" Value="10,8" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Border x:Name="OutterBorder"
                        BorderBrush="{StaticResource AlertDarkSolidColorBrush}"
                        BorderThickness="4"
                        CornerRadius="5"
                        UseLayoutRounding="{TemplateBinding UseLayoutRounding}">
                        <Grid
                            HorizontalAlignment="Center"
                            VerticalAlignment="Center"
                            SnapsToDevicePixels="true">
                            <Border x:Name="InnerBorder"
                                Background="{StaticResource DarkSolidColorBrush}"
                                BorderBrush="{StaticResource DarkSolidColorBrush}"
                                BorderThickness="1"
                                CornerRadius="5"
                                UseLayoutRounding="{TemplateBinding UseLayoutRounding}">
                                <ContentPresenter x:Name="PART_Content"
                                    Margin="{TemplateBinding Padding}"
                                    HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                    VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                    Focusable="False"
                                    RecognizesAccessKey="True"
                                    SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
                            </Border>
                        </Grid>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter TargetName="InnerBorder" Property="Border.Background" Value="{StaticResource DarkHoveredSolidColorBrush}" />
                        </Trigger>

                        <Trigger Property="IsPressed" Value="True">
                            <Setter TargetName="OutterBorder" Property="Border.BorderBrush" Value="{StaticResource AlertDarkSolidColorBrush}" />
                        </Trigger>

                        <Trigger Property="IsPressed" Value="False">
                            <Setter TargetName="OutterBorder" Property="Border.BorderBrush" Value="Transparent" />
                        </Trigger>

                        <Trigger Property="IsFocused" Value="True">
                            <Setter TargetName="OutterBorder" Property="Border.BorderBrush" Value="{StaticResource AlertDarkSolidColorBrush}" />
                            <Setter TargetName="InnerBorder" Property="Border.Background" Value="{StaticResource DarkHoveredSolidColorBrush}" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="btn-link" BasedOn="{StaticResource btn-base}" TargetType="{x:Type Button}">
        <Setter Property="Padding" Value="10,8" />
        <Setter Property="BorderBrush" Value="Transparent" />
        <Setter Property="Background" Value="Transparent" />
        <Setter Property="Foreground" Value="{StaticResource LinkButtonForegroundSolidColorBrush}" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Border x:Name="OutterBorder"
                        CornerRadius="5">
                        <Grid>
                            <Border x:Name="InnerBorder"
                                BorderThickness="1"
                                CornerRadius="5" />
                            <TextBlock x:Name="txtLink"
                                Padding="{TemplateBinding Padding}"
                                HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                Foreground="{TemplateBinding Foreground}"
                                Text="{TemplateBinding assist:TextAssist.Text}" />
                        </Grid>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter TargetName="txtLink" Property="TextBlock.TextDecorations" Value="Underline" />
                        </Trigger>

                        <Trigger Property="IsPressed" Value="True">
                            <Setter TargetName="txtLink" Property="TextBlock.TextDecorations" Value="Underline" />
                        </Trigger>

                        <Trigger Property="IsPressed" Value="False">
                            <Setter TargetName="txtLink" Property="TextBlock.TextDecorations" Value="None" />
                        </Trigger>

                        <Trigger Property="IsFocused" Value="True">
                            <Setter TargetName="txtLink" Property="TextBlock.TextDecorations" Value="Underline" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
</ResourceDictionary>