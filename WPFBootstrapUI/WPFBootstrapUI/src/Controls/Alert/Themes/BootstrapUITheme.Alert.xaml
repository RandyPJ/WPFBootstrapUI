<ResourceDictionary
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:AlertControl="clr-namespace:WPFBootstrapUI.src.Controls.Alert.Implementation"
    xmlns:Converter="clr-namespace:WPFBootstrapUI.src.Converters"
    xmlns:local="clr-namespace:WPFBootstrapUI.src.Controls.Alert.Themes">


    <ResourceDictionary.MergedDictionaries>
        <ResourceDictionary Source="pack://application:,,,/WPFBootstrapUI;component/src/Colors/ColorsDictionary.xaml" />
        <ResourceDictionary>
            <Converter:BooleanToVisibilityConverter x:Key="BooleanToVisibilityConverter" />
        </ResourceDictionary>
    </ResourceDictionary.MergedDictionaries>

    <Style x:Key="Alert-Base" TargetType="{x:Type AlertControl:Alert}">
        <Setter Property="AlertControl:Alert.CornerRadius" Value="4" />
        <Setter Property="Padding" Value="20,12" />
        <Setter Property="Background" Value="{StaticResource LightSolidColorBrush}" />
        <Setter Property="Height" Value="50" />
        <Setter Property="FontFamily" Value="{StaticResource SegoeUI}" />
        <Setter Property="VerticalContentAlignment" Value="Center" />
        <Setter Property="HorizontalContentAlignment" Value="Left" />
        <Setter Property="FontSize" Value="14" />
        <Setter Property="Foreground" Value="{StaticResource DarkSolidColorBrush}" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type AlertControl:Alert}">
                    <Grid>
                        <Border
                            Background="{TemplateBinding Background}"
                            BorderBrush="{TemplateBinding BorderBrush}"
                            CornerRadius="{Binding Path=(AlertControl:Alert.CornerRadius), RelativeSource={RelativeSource TemplatedParent}}" />

                        <ContentPresenter
                            x:Name="PART_ContentHost"
                            Margin="20,0,0,0"
                            HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                            VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                            Content="{TemplateBinding Content}"
                            TextBlock.FontFamily="{TemplateBinding FontFamily}"
                            TextBlock.FontSize="{TemplateBinding FontSize}"
                            TextBlock.Foreground="{TemplateBinding Foreground}" />

                        <Button x:Name="PART_DismissButton">
                            <Button.Style>
                                <Style TargetType="{x:Type Button}">
                                    <Setter Property="Height" Value="40" />
                                    <Setter Property="Width" Value="40" />
                                    <Setter Property="Margin" Value="10" />
                                    <Setter Property="Content" Value="X" />
                                    <Setter Property="Cursor" Value="Hand" />
                                    <Setter Property="FontWeight" Value="Bold" />
                                    <Setter Property="FontSize" Value="16" />
                                    <Setter Property="VerticalAlignment" Value="Center" />
                                    <Setter Property="HorizontalAlignment" Value="Right" />
                                    <Setter Property="HorizontalContentAlignment" Value="Center" />
                                    <Setter Property="VerticalContentAlignment" Value="Center" />
                                    <Setter Property="Visibility" Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=(AlertControl:Alert.IsAlertDismissible), Converter={StaticResource BooleanToVisibilityConverter}}" />
                                    <Setter Property="Template">
                                        <Setter.Value>
                                            <ControlTemplate TargetType="{x:Type Button}">
                                                <Grid>
                                                    <Border
                                                        x:Name="MyBorder"
                                                        Padding="20"
                                                        Background="Transparent"
                                                        BorderBrush="Transparent"
                                                        BorderThickness="0" />
                                                    <ContentPresenter
                                                        x:Name="Presenter"
                                                        HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                                        VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                                        Content="{TemplateBinding Content}"
                                                        TextBlock.Foreground="{TemplateBinding Foreground}" />
                                                </Grid>
                                                <ControlTemplate.Triggers>
                                                    <Trigger Property="IsMouseOver" Value="False">
                                                        <Setter TargetName="Presenter" Property="Opacity" Value="0.4" />
                                                    </Trigger>
                                                    <Trigger Property="IsMouseOver" Value="True">
                                                        <Setter TargetName="Presenter" Property="Opacity" Value="1" />
                                                    </Trigger>
                                                </ControlTemplate.Triggers>
                                            </ControlTemplate>
                                        </Setter.Value>
                                    </Setter>
                                </Style>
                            </Button.Style>

                        </Button>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style
        x:Key="Alert-Primary"
        BasedOn="{StaticResource Alert-Base}"
        TargetType="{x:Type AlertControl:Alert}">
        <Setter Property="Background" Value="{StaticResource AlertPrimarySolidColorBrush}" />
        <Setter Property="Foreground" Value="{StaticResource AlertPrimaryForegroundSolidColorBrush}" />
    </Style>

    <Style
        x:Key="Alert-Secondary"
        BasedOn="{StaticResource Alert-Base}"
        TargetType="{x:Type AlertControl:Alert}">
        <Setter Property="Background" Value="{StaticResource AlertSecondarySolidColorBrush}" />
        <Setter Property="Foreground" Value="{StaticResource AlertSecondaryForegroundSolidColorBrush}" />

    </Style>

    <Style
        x:Key="Alert-Success"
        BasedOn="{StaticResource Alert-Base}"
        TargetType="{x:Type AlertControl:Alert}">
        <Setter Property="Background" Value="{StaticResource AlertSuccessSolidColorBrush}" />
        <Setter Property="Foreground" Value="{StaticResource AlertSuccessForegroundSolidColorBrush}" />

    </Style>

    <Style
        x:Key="Alert-Danger"
        BasedOn="{StaticResource Alert-Base}"
        TargetType="{x:Type AlertControl:Alert}">
        <Setter Property="Background" Value="{StaticResource AlertDangerSolidColorBrush}" />
        <Setter Property="Foreground" Value="{StaticResource AlertDangerForegroundSolidColorBrush}" />

    </Style>

    <Style
        x:Key="Alert-Warning"
        BasedOn="{StaticResource Alert-Base}"
        TargetType="{x:Type AlertControl:Alert}">
        <Setter Property="Background" Value="{StaticResource AlertWarningSolidColorBrush}" />
        <Setter Property="Foreground" Value="{StaticResource AlertWarningForegroundSolidColorBrush}" />

    </Style>

    <Style
        x:Key="Alert-Info"
        BasedOn="{StaticResource Alert-Base}"
        TargetType="{x:Type AlertControl:Alert}">
        <Setter Property="Background" Value="{StaticResource AlertInfoSolidColorBrush}" />
        <Setter Property="Foreground" Value="{StaticResource AlertInfoForegroundSolidColorBrush}" />

    </Style>

    <Style
        x:Key="Alert-Light"
        BasedOn="{StaticResource Alert-Base}"
        TargetType="{x:Type AlertControl:Alert}">
        <Setter Property="Background" Value="{StaticResource AlertLightSolidColorBrush}" />
        <Setter Property="Foreground" Value="{StaticResource AlertLightForegroundSolidColorBrush}" />

    </Style>

    <Style
        x:Key="Alert-Dark"
        BasedOn="{StaticResource Alert-Base}"
        TargetType="{x:Type AlertControl:Alert}">
        <Setter Property="Background" Value="{StaticResource AlertDarkSolidColorBrush}" />
        <Setter Property="Foreground" Value="{StaticResource AlertDarkForegroundSolidColorBrush}" />
    </Style>
</ResourceDictionary>